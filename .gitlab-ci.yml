stages:
  - install      # Install dependencies
  - prettier     # Run Prettier Check
  - eslint       # Run ESLint Fix
  - test         # Run Tests
  - build_android        # Build Android APK

install_dependencies:
  stage: install
  image: node:20
  script:
    - echo "ðŸ“¦ Installing dependencies..."
    - npm install
    - echo "âœ… Dependencies installed!"

prettier_check:
  stage: prettier
  image: node:20
  script:
    - echo "ðŸ“¦ prettier checking..."
    - npm run prettier:check
    - echo "âœ… prettier checked!"

eslint_check:
  stage: eslint
  image: node:20
  script:
    - echo "ðŸ“¦ Installing dependencies..."
    - npm ci        # or npm install
    - echo "ðŸ“¦ Running ESLint..."
    - npm run lint:fix
    - echo "âœ… ESLint done!"   

test_check:
  stage: test
  image: node:20
  script:
    - echo "ðŸ“¦ test checking..."
    - npm ci      # or npm install
    - npm run test
    - echo "âœ… test checked!"

build_android_check:
  stage: build_android
  image: node:20
  image: reactnativecommunity/react-native-android
  before_script:
    - echo "Preparing Android environment..."
    - export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
    - npm ci
    - npm install -g firebase-tools
  script:
    - echo "ðŸ“¦ Building Android Debug APK..."
    - cd android
    - ./gradlew assembleDebug
    - echo "âœ… Debug APK built!"
    - cd ..
    - echo "ðŸš€ Uploading APK to Firebase App Distribution..."
    - >
      firebase appdistribution:distribute android/app/build/outputs/apk/debug/app-debug.apk
      --app ${FIREBASE_APP_ID}
      --token ${FIREBASE_TOKEN}
    - echo "âœ… APK uploaded to Firebase App Distribution!"
        
